/*
This file is part of BORG.
    BORG is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.
    BORG is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
    You should have received a copy of the GNU General Public License
    along with BORG; if not, write to the Free Software
    Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
Copyright 2003 by ==Quiet==
 */

package net.sf.borg.ui;

import java.util.ArrayList;
import java.util.Collection;
import java.util.Iterator;
import java.util.TreeSet;

import javax.swing.JCheckBox;

import net.sf.borg.common.util.Errmsg;
import net.sf.borg.common.util.Version;
import net.sf.borg.model.AppointmentModel;

/**
 *
 * @author  mberger
 */
public class CategoryChooser extends View {
    
    static {
        Version.addVersion("$Id$");
    }
    private ArrayList cbs = null;
    
    private static CategoryChooser singleton = null;
    static CategoryChooser getReference() {
        if( singleton == null || !singleton.isShowing())
            singleton = new CategoryChooser();
        return( singleton );
    }
    /** Creates new form CategoryChooser */
    private CategoryChooser() {
        
        addModel( AppointmentModel.getReference());
        
        initComponents();
        
        // add current categories
        try{
            AppointmentModel calmod = AppointmentModel.getReference();
            Collection curcats = calmod.getCurrentCategories();
            Collection allcats = calmod.getCategories();
            
            if( allcats == null ) {
                allcats = new TreeSet();
            }
            
            cbs = new ArrayList();
            
            Iterator it = allcats.iterator();
            while( it.hasNext() ) {
                String cat = (String) it.next();
                JCheckBox cb = new JCheckBox(cat);
                cbs.add( cb );
                if( curcats != null && curcats.contains(cat))
                    cb.setSelected(true);
                jPanel1.add(cb);
            }
        }
        catch( Exception e) {
            Errmsg.errmsg(e);
        }
        
        pack();
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    private void initComponents() {//GEN-BEGIN:initComponents
        java.awt.GridBagConstraints gridBagConstraints;

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle(java.util.ResourceBundle.getBundle("resource/borg_resource").getString("catchooser"));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });

        jPanel1.setLayout(new java.awt.GridLayout(0, 1));

        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 1, true));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        jButton1.setText(java.util.ResourceBundle.getBundle("resource/borg_resource").getString("Select"));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton1);

        jButton2.setText(java.util.ResourceBundle.getBundle("resource/borg_resource").getString("Dismiss"));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jPanel2.add(jButton2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // set categories
        TreeSet newcats = new TreeSet();
        Iterator it = cbs.iterator();
        while( it.hasNext()) {
            JCheckBox cb = (JCheckBox) it.next();
            if( cb.isSelected()) {
                newcats.add( cb.getText());
            }
        }
        AppointmentModel.getReference().setCurrentCategories(newcats);
        
    }//GEN-LAST:event_jButton1ActionPerformed
    
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed
    
    /** Exit the Application */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        this.dispose();
    }//GEN-LAST:event_exitForm
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        new CategoryChooser().show();
    }
    
    public void destroy() {
        this.dispose();
    }
    
    public void refresh() {
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    // End of variables declaration//GEN-END:variables
    
}
